{"version":3,"sources":["components/card/card.component.jsx","components/cardList/cardlist.component.jsx","components/searchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","children","id","alt","name","email","CardList","monsters","map","e","SearchBox","placeholder","handleChange","type","onChange","App","handleChanges","setState","searchField","target","value","state","fetch","then","r","json","this","filteredMonsters","filter","m","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGO,SAASA,EAAKC,GAEjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,SAASC,GAAzC,aAAwDC,IAAI,eAEpE,6BAAKL,EAAMG,SAASG,OACpB,6BAAKN,EAAMG,SAASI,WCNzB,SAASC,EAASR,GAErB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAACC,GAAD,OACf,cAACZ,EAAD,UACKY,GADMA,EAAEP,S,UCPpBQ,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,KCFHG,G,MAAb,kDACE,aAAe,IAAD,8BACZ,gBAYFC,cAAgB,SAACP,GAAD,OAAO,EAAKQ,SAAS,CAAEC,YAAaT,EAAEU,OAAOC,SAX3D,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,EADhB,gEASuB,IAAD,OACHI,MAAM,8CACdC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UAAQF,MAAK,SAACC,GAAD,OAAO,EAAKP,SAAS,CAAEV,SAAUiB,SAXvE,+BAgBY,IAAD,EAC2BE,KAAKL,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACdS,EAAmBpB,EAASqB,QAAO,SAACC,GAAD,OACrCA,EAAEzB,KAAK0B,cAAcC,SAASb,EAAYY,kBAE5C,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEY,YAAY,kBACZC,aAAcc,KAAKV,gBAErB,cAACV,EAAD,CAAUC,SAAUoB,WA5B5B,GAAyBK,cCKVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKvC,KAAK,aAEZwC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d43bc303.chunk.js","sourcesContent":["import React from 'react';\nimport \"./card-style.css\"\n\nexport function Card(props) {\n    // console.log(props);\n    return (\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${props.children.id}?set=set2`} alt=\"Loading...\">\n            </img>\n            <h2>{props.children.name}</h2>\n            <h3>{props.children.email}</h3>\n        </div>\n    );\n}","import React from 'react';\nimport \"./cardlist-style.css\"\nimport { Card } from \"../card/card.component\"\n\nexport function CardList(props) {\n     \n    return (\n        <div className=\"card-list\">\n            {\n                props.monsters.map((e) =>\n                    <Card key={e.id}>\n                        {e}\n                    </Card>\n                )\n            }\n        </div>\n    );\n}","import React from \"react\";\nimport \"./searchBox.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    ></input>\n  );\n};\n","import React, { Component } from \"react\";\n\nimport { CardList } from \"./components/cardList/cardlist.component.jsx\";\nimport { SearchBox } from \"./components/searchBox/searchBox.component.jsx\";\n\nimport \"./App.css\";\n\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const result = fetch(\"https://jsonplaceholder.typicode.com/users\");\n    result.then((r) => r.json()).then((r) => this.setState({ monsters: r }));\n  }\n\n  handleChanges = (e) => this.setState({ searchField: e.target.value });\n\n  render() {\n    const { monsters, searchField } = this.state;\n    let filteredMonsters = monsters.filter((m) =>\n      m.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Rollodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChanges}\n        ></SearchBox>\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n  \n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App name=\"testss\"></App>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}